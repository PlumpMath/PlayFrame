// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ss_msg.proto

#ifndef PROTOBUF_ss_5fmsg_2eproto__INCLUDED
#define PROTOBUF_ss_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "ss_data.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoSs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ss_5fmsg_2eproto();
void protobuf_AssignDesc_ss_5fmsg_2eproto();
void protobuf_ShutdownFile_ss_5fmsg_2eproto();

class Head;
class Msg;

// ===================================================================

class Head : public ::google::protobuf::Message {
 public:
  Head();
  virtual ~Head();

  Head(const Head& from);

  inline Head& operator=(const Head& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Head& default_instance();

  void Swap(Head* other);

  // implements Message ----------------------------------------------

  Head* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Head& from);
  void MergeFrom(const Head& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);

  // optional int32 ret = 2;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 2;
  inline ::google::protobuf::int32 ret() const;
  inline void set_ret(::google::protobuf::int32 value);

  // optional uint64 seq = 3;
  inline bool has_seq() const;
  inline void clear_seq();
  static const int kSeqFieldNumber = 3;
  inline ::google::protobuf::uint64 seq() const;
  inline void set_seq(::google::protobuf::uint64 value);

  // optional int32 player_idx = 4;
  inline bool has_player_idx() const;
  inline void clear_player_idx();
  static const int kPlayerIdxFieldNumber = 4;
  inline ::google::protobuf::int32 player_idx() const;
  inline void set_player_idx(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ProtoSs.Head)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_seq();
  inline void clear_has_seq();
  inline void set_has_player_idx();
  inline void clear_has_player_idx();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 cmd_;
  ::google::protobuf::int32 ret_;
  ::google::protobuf::uint64 seq_;
  ::google::protobuf::int32 player_idx_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmsg_2eproto();
  friend void protobuf_AssignDesc_ss_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static Head* default_instance_;
};
// -------------------------------------------------------------------

class Msg : public ::google::protobuf::Message {
 public:
  Msg();
  virtual ~Msg();

  Msg(const Msg& from);

  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Msg& default_instance();

  void Swap(Msg* other);

  // implements Message ----------------------------------------------

  Msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Msg& from);
  void MergeFrom(const Msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ProtoSs.Head head = 1;
  inline bool has_head() const;
  inline void clear_head();
  static const int kHeadFieldNumber = 1;
  inline const ::ProtoSs::Head& head() const;
  inline ::ProtoSs::Head* mutable_head();
  inline ::ProtoSs::Head* release_head();
  inline void set_allocated_head(::ProtoSs::Head* head);

  // optional .ProtoSs.AccountRegReq account_reg_req = 11;
  inline bool has_account_reg_req() const;
  inline void clear_account_reg_req();
  static const int kAccountRegReqFieldNumber = 11;
  inline const ::ProtoSs::AccountRegReq& account_reg_req() const;
  inline ::ProtoSs::AccountRegReq* mutable_account_reg_req();
  inline ::ProtoSs::AccountRegReq* release_account_reg_req();
  inline void set_allocated_account_reg_req(::ProtoSs::AccountRegReq* account_reg_req);

  // optional .ProtoSs.AccountRegRes account_reg_res = 12;
  inline bool has_account_reg_res() const;
  inline void clear_account_reg_res();
  static const int kAccountRegResFieldNumber = 12;
  inline const ::ProtoSs::AccountRegRes& account_reg_res() const;
  inline ::ProtoSs::AccountRegRes* mutable_account_reg_res();
  inline ::ProtoSs::AccountRegRes* release_account_reg_res();
  inline void set_allocated_account_reg_res(::ProtoSs::AccountRegRes* account_reg_res);

  // optional .ProtoSs.BindAccountReq bind_account_req = 13;
  inline bool has_bind_account_req() const;
  inline void clear_bind_account_req();
  static const int kBindAccountReqFieldNumber = 13;
  inline const ::ProtoSs::BindAccountReq& bind_account_req() const;
  inline ::ProtoSs::BindAccountReq* mutable_bind_account_req();
  inline ::ProtoSs::BindAccountReq* release_bind_account_req();
  inline void set_allocated_bind_account_req(::ProtoSs::BindAccountReq* bind_account_req);

  // optional .ProtoSs.BindAccountRes bind_account_res = 14;
  inline bool has_bind_account_res() const;
  inline void clear_bind_account_res();
  static const int kBindAccountResFieldNumber = 14;
  inline const ::ProtoSs::BindAccountRes& bind_account_res() const;
  inline ::ProtoSs::BindAccountRes* mutable_bind_account_res();
  inline ::ProtoSs::BindAccountRes* release_bind_account_res();
  inline void set_allocated_bind_account_res(::ProtoSs::BindAccountRes* bind_account_res);

  // optional .ProtoSs.EditPasswordReq edit_password_req = 15;
  inline bool has_edit_password_req() const;
  inline void clear_edit_password_req();
  static const int kEditPasswordReqFieldNumber = 15;
  inline const ::ProtoSs::EditPasswordReq& edit_password_req() const;
  inline ::ProtoSs::EditPasswordReq* mutable_edit_password_req();
  inline ::ProtoSs::EditPasswordReq* release_edit_password_req();
  inline void set_allocated_edit_password_req(::ProtoSs::EditPasswordReq* edit_password_req);

  // optional .ProtoSs.EditPasswordRes edit_password_res = 16;
  inline bool has_edit_password_res() const;
  inline void clear_edit_password_res();
  static const int kEditPasswordResFieldNumber = 16;
  inline const ::ProtoSs::EditPasswordRes& edit_password_res() const;
  inline ::ProtoSs::EditPasswordRes* mutable_edit_password_res();
  inline ::ProtoSs::EditPasswordRes* release_edit_password_res();
  inline void set_allocated_edit_password_res(::ProtoSs::EditPasswordRes* edit_password_res);

  // optional .ProtoSs.AccountVerifyReq account_verify_req = 17;
  inline bool has_account_verify_req() const;
  inline void clear_account_verify_req();
  static const int kAccountVerifyReqFieldNumber = 17;
  inline const ::ProtoSs::AccountVerifyReq& account_verify_req() const;
  inline ::ProtoSs::AccountVerifyReq* mutable_account_verify_req();
  inline ::ProtoSs::AccountVerifyReq* release_account_verify_req();
  inline void set_allocated_account_verify_req(::ProtoSs::AccountVerifyReq* account_verify_req);

  // optional .ProtoSs.AccountVerifyRes account_verify_res = 18;
  inline bool has_account_verify_res() const;
  inline void clear_account_verify_res();
  static const int kAccountVerifyResFieldNumber = 18;
  inline const ::ProtoSs::AccountVerifyRes& account_verify_res() const;
  inline ::ProtoSs::AccountVerifyRes* mutable_account_verify_res();
  inline ::ProtoSs::AccountVerifyRes* release_account_verify_res();
  inline void set_allocated_account_verify_res(::ProtoSs::AccountVerifyRes* account_verify_res);

  // optional .ProtoSs.GetPlayerDataReq get_player_data_req = 19;
  inline bool has_get_player_data_req() const;
  inline void clear_get_player_data_req();
  static const int kGetPlayerDataReqFieldNumber = 19;
  inline const ::ProtoSs::GetPlayerDataReq& get_player_data_req() const;
  inline ::ProtoSs::GetPlayerDataReq* mutable_get_player_data_req();
  inline ::ProtoSs::GetPlayerDataReq* release_get_player_data_req();
  inline void set_allocated_get_player_data_req(::ProtoSs::GetPlayerDataReq* get_player_data_req);

  // optional .ProtoSs.GetPlayerDataRes get_player_data_res = 20;
  inline bool has_get_player_data_res() const;
  inline void clear_get_player_data_res();
  static const int kGetPlayerDataResFieldNumber = 20;
  inline const ::ProtoSs::GetPlayerDataRes& get_player_data_res() const;
  inline ::ProtoSs::GetPlayerDataRes* mutable_get_player_data_res();
  inline ::ProtoSs::GetPlayerDataRes* release_get_player_data_res();
  inline void set_allocated_get_player_data_res(::ProtoSs::GetPlayerDataRes* get_player_data_res);

  // optional .ProtoSs.SetPlayerDataReq set_player_data_req = 21;
  inline bool has_set_player_data_req() const;
  inline void clear_set_player_data_req();
  static const int kSetPlayerDataReqFieldNumber = 21;
  inline const ::ProtoSs::SetPlayerDataReq& set_player_data_req() const;
  inline ::ProtoSs::SetPlayerDataReq* mutable_set_player_data_req();
  inline ::ProtoSs::SetPlayerDataReq* release_set_player_data_req();
  inline void set_allocated_set_player_data_req(::ProtoSs::SetPlayerDataReq* set_player_data_req);

  // optional .ProtoSs.SetPlayerDataRes set_player_data_res = 22;
  inline bool has_set_player_data_res() const;
  inline void clear_set_player_data_res();
  static const int kSetPlayerDataResFieldNumber = 22;
  inline const ::ProtoSs::SetPlayerDataRes& set_player_data_res() const;
  inline ::ProtoSs::SetPlayerDataRes* mutable_set_player_data_res();
  inline ::ProtoSs::SetPlayerDataRes* release_set_player_data_res();
  inline void set_allocated_set_player_data_res(::ProtoSs::SetPlayerDataRes* set_player_data_res);

  // @@protoc_insertion_point(class_scope:ProtoSs.Msg)
 private:
  inline void set_has_head();
  inline void clear_has_head();
  inline void set_has_account_reg_req();
  inline void clear_has_account_reg_req();
  inline void set_has_account_reg_res();
  inline void clear_has_account_reg_res();
  inline void set_has_bind_account_req();
  inline void clear_has_bind_account_req();
  inline void set_has_bind_account_res();
  inline void clear_has_bind_account_res();
  inline void set_has_edit_password_req();
  inline void clear_has_edit_password_req();
  inline void set_has_edit_password_res();
  inline void clear_has_edit_password_res();
  inline void set_has_account_verify_req();
  inline void clear_has_account_verify_req();
  inline void set_has_account_verify_res();
  inline void clear_has_account_verify_res();
  inline void set_has_get_player_data_req();
  inline void clear_has_get_player_data_req();
  inline void set_has_get_player_data_res();
  inline void clear_has_get_player_data_res();
  inline void set_has_set_player_data_req();
  inline void clear_has_set_player_data_req();
  inline void set_has_set_player_data_res();
  inline void clear_has_set_player_data_res();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::ProtoSs::Head* head_;
  ::ProtoSs::AccountRegReq* account_reg_req_;
  ::ProtoSs::AccountRegRes* account_reg_res_;
  ::ProtoSs::BindAccountReq* bind_account_req_;
  ::ProtoSs::BindAccountRes* bind_account_res_;
  ::ProtoSs::EditPasswordReq* edit_password_req_;
  ::ProtoSs::EditPasswordRes* edit_password_res_;
  ::ProtoSs::AccountVerifyReq* account_verify_req_;
  ::ProtoSs::AccountVerifyRes* account_verify_res_;
  ::ProtoSs::GetPlayerDataReq* get_player_data_req_;
  ::ProtoSs::GetPlayerDataRes* get_player_data_res_;
  ::ProtoSs::SetPlayerDataReq* set_player_data_req_;
  ::ProtoSs::SetPlayerDataRes* set_player_data_res_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fmsg_2eproto();
  friend void protobuf_AssignDesc_ss_5fmsg_2eproto();
  friend void protobuf_ShutdownFile_ss_5fmsg_2eproto();

  void InitAsDefaultInstance();
  static Msg* default_instance_;
};
// ===================================================================


// ===================================================================

// Head

// optional int32 cmd = 1;
inline bool Head::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Head::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Head::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Head::clear_cmd() {
  cmd_ = 0;
  clear_has_cmd();
}
inline ::google::protobuf::int32 Head::cmd() const {
  return cmd_;
}
inline void Head::set_cmd(::google::protobuf::int32 value) {
  set_has_cmd();
  cmd_ = value;
}

// optional int32 ret = 2;
inline bool Head::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Head::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Head::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Head::clear_ret() {
  ret_ = 0;
  clear_has_ret();
}
inline ::google::protobuf::int32 Head::ret() const {
  return ret_;
}
inline void Head::set_ret(::google::protobuf::int32 value) {
  set_has_ret();
  ret_ = value;
}

// optional uint64 seq = 3;
inline bool Head::has_seq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Head::set_has_seq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Head::clear_has_seq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Head::clear_seq() {
  seq_ = GOOGLE_ULONGLONG(0);
  clear_has_seq();
}
inline ::google::protobuf::uint64 Head::seq() const {
  return seq_;
}
inline void Head::set_seq(::google::protobuf::uint64 value) {
  set_has_seq();
  seq_ = value;
}

// optional int32 player_idx = 4;
inline bool Head::has_player_idx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Head::set_has_player_idx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Head::clear_has_player_idx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Head::clear_player_idx() {
  player_idx_ = 0;
  clear_has_player_idx();
}
inline ::google::protobuf::int32 Head::player_idx() const {
  return player_idx_;
}
inline void Head::set_player_idx(::google::protobuf::int32 value) {
  set_has_player_idx();
  player_idx_ = value;
}

// -------------------------------------------------------------------

// Msg

// optional .ProtoSs.Head head = 1;
inline bool Msg::has_head() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Msg::set_has_head() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Msg::clear_has_head() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Msg::clear_head() {
  if (head_ != NULL) head_->::ProtoSs::Head::Clear();
  clear_has_head();
}
inline const ::ProtoSs::Head& Msg::head() const {
  return head_ != NULL ? *head_ : *default_instance_->head_;
}
inline ::ProtoSs::Head* Msg::mutable_head() {
  set_has_head();
  if (head_ == NULL) head_ = new ::ProtoSs::Head;
  return head_;
}
inline ::ProtoSs::Head* Msg::release_head() {
  clear_has_head();
  ::ProtoSs::Head* temp = head_;
  head_ = NULL;
  return temp;
}
inline void Msg::set_allocated_head(::ProtoSs::Head* head) {
  delete head_;
  head_ = head;
  if (head) {
    set_has_head();
  } else {
    clear_has_head();
  }
}

// optional .ProtoSs.AccountRegReq account_reg_req = 11;
inline bool Msg::has_account_reg_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Msg::set_has_account_reg_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Msg::clear_has_account_reg_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Msg::clear_account_reg_req() {
  if (account_reg_req_ != NULL) account_reg_req_->::ProtoSs::AccountRegReq::Clear();
  clear_has_account_reg_req();
}
inline const ::ProtoSs::AccountRegReq& Msg::account_reg_req() const {
  return account_reg_req_ != NULL ? *account_reg_req_ : *default_instance_->account_reg_req_;
}
inline ::ProtoSs::AccountRegReq* Msg::mutable_account_reg_req() {
  set_has_account_reg_req();
  if (account_reg_req_ == NULL) account_reg_req_ = new ::ProtoSs::AccountRegReq;
  return account_reg_req_;
}
inline ::ProtoSs::AccountRegReq* Msg::release_account_reg_req() {
  clear_has_account_reg_req();
  ::ProtoSs::AccountRegReq* temp = account_reg_req_;
  account_reg_req_ = NULL;
  return temp;
}
inline void Msg::set_allocated_account_reg_req(::ProtoSs::AccountRegReq* account_reg_req) {
  delete account_reg_req_;
  account_reg_req_ = account_reg_req;
  if (account_reg_req) {
    set_has_account_reg_req();
  } else {
    clear_has_account_reg_req();
  }
}

// optional .ProtoSs.AccountRegRes account_reg_res = 12;
inline bool Msg::has_account_reg_res() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Msg::set_has_account_reg_res() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Msg::clear_has_account_reg_res() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Msg::clear_account_reg_res() {
  if (account_reg_res_ != NULL) account_reg_res_->::ProtoSs::AccountRegRes::Clear();
  clear_has_account_reg_res();
}
inline const ::ProtoSs::AccountRegRes& Msg::account_reg_res() const {
  return account_reg_res_ != NULL ? *account_reg_res_ : *default_instance_->account_reg_res_;
}
inline ::ProtoSs::AccountRegRes* Msg::mutable_account_reg_res() {
  set_has_account_reg_res();
  if (account_reg_res_ == NULL) account_reg_res_ = new ::ProtoSs::AccountRegRes;
  return account_reg_res_;
}
inline ::ProtoSs::AccountRegRes* Msg::release_account_reg_res() {
  clear_has_account_reg_res();
  ::ProtoSs::AccountRegRes* temp = account_reg_res_;
  account_reg_res_ = NULL;
  return temp;
}
inline void Msg::set_allocated_account_reg_res(::ProtoSs::AccountRegRes* account_reg_res) {
  delete account_reg_res_;
  account_reg_res_ = account_reg_res;
  if (account_reg_res) {
    set_has_account_reg_res();
  } else {
    clear_has_account_reg_res();
  }
}

// optional .ProtoSs.BindAccountReq bind_account_req = 13;
inline bool Msg::has_bind_account_req() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Msg::set_has_bind_account_req() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Msg::clear_has_bind_account_req() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Msg::clear_bind_account_req() {
  if (bind_account_req_ != NULL) bind_account_req_->::ProtoSs::BindAccountReq::Clear();
  clear_has_bind_account_req();
}
inline const ::ProtoSs::BindAccountReq& Msg::bind_account_req() const {
  return bind_account_req_ != NULL ? *bind_account_req_ : *default_instance_->bind_account_req_;
}
inline ::ProtoSs::BindAccountReq* Msg::mutable_bind_account_req() {
  set_has_bind_account_req();
  if (bind_account_req_ == NULL) bind_account_req_ = new ::ProtoSs::BindAccountReq;
  return bind_account_req_;
}
inline ::ProtoSs::BindAccountReq* Msg::release_bind_account_req() {
  clear_has_bind_account_req();
  ::ProtoSs::BindAccountReq* temp = bind_account_req_;
  bind_account_req_ = NULL;
  return temp;
}
inline void Msg::set_allocated_bind_account_req(::ProtoSs::BindAccountReq* bind_account_req) {
  delete bind_account_req_;
  bind_account_req_ = bind_account_req;
  if (bind_account_req) {
    set_has_bind_account_req();
  } else {
    clear_has_bind_account_req();
  }
}

// optional .ProtoSs.BindAccountRes bind_account_res = 14;
inline bool Msg::has_bind_account_res() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Msg::set_has_bind_account_res() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Msg::clear_has_bind_account_res() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Msg::clear_bind_account_res() {
  if (bind_account_res_ != NULL) bind_account_res_->::ProtoSs::BindAccountRes::Clear();
  clear_has_bind_account_res();
}
inline const ::ProtoSs::BindAccountRes& Msg::bind_account_res() const {
  return bind_account_res_ != NULL ? *bind_account_res_ : *default_instance_->bind_account_res_;
}
inline ::ProtoSs::BindAccountRes* Msg::mutable_bind_account_res() {
  set_has_bind_account_res();
  if (bind_account_res_ == NULL) bind_account_res_ = new ::ProtoSs::BindAccountRes;
  return bind_account_res_;
}
inline ::ProtoSs::BindAccountRes* Msg::release_bind_account_res() {
  clear_has_bind_account_res();
  ::ProtoSs::BindAccountRes* temp = bind_account_res_;
  bind_account_res_ = NULL;
  return temp;
}
inline void Msg::set_allocated_bind_account_res(::ProtoSs::BindAccountRes* bind_account_res) {
  delete bind_account_res_;
  bind_account_res_ = bind_account_res;
  if (bind_account_res) {
    set_has_bind_account_res();
  } else {
    clear_has_bind_account_res();
  }
}

// optional .ProtoSs.EditPasswordReq edit_password_req = 15;
inline bool Msg::has_edit_password_req() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Msg::set_has_edit_password_req() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Msg::clear_has_edit_password_req() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Msg::clear_edit_password_req() {
  if (edit_password_req_ != NULL) edit_password_req_->::ProtoSs::EditPasswordReq::Clear();
  clear_has_edit_password_req();
}
inline const ::ProtoSs::EditPasswordReq& Msg::edit_password_req() const {
  return edit_password_req_ != NULL ? *edit_password_req_ : *default_instance_->edit_password_req_;
}
inline ::ProtoSs::EditPasswordReq* Msg::mutable_edit_password_req() {
  set_has_edit_password_req();
  if (edit_password_req_ == NULL) edit_password_req_ = new ::ProtoSs::EditPasswordReq;
  return edit_password_req_;
}
inline ::ProtoSs::EditPasswordReq* Msg::release_edit_password_req() {
  clear_has_edit_password_req();
  ::ProtoSs::EditPasswordReq* temp = edit_password_req_;
  edit_password_req_ = NULL;
  return temp;
}
inline void Msg::set_allocated_edit_password_req(::ProtoSs::EditPasswordReq* edit_password_req) {
  delete edit_password_req_;
  edit_password_req_ = edit_password_req;
  if (edit_password_req) {
    set_has_edit_password_req();
  } else {
    clear_has_edit_password_req();
  }
}

// optional .ProtoSs.EditPasswordRes edit_password_res = 16;
inline bool Msg::has_edit_password_res() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Msg::set_has_edit_password_res() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Msg::clear_has_edit_password_res() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Msg::clear_edit_password_res() {
  if (edit_password_res_ != NULL) edit_password_res_->::ProtoSs::EditPasswordRes::Clear();
  clear_has_edit_password_res();
}
inline const ::ProtoSs::EditPasswordRes& Msg::edit_password_res() const {
  return edit_password_res_ != NULL ? *edit_password_res_ : *default_instance_->edit_password_res_;
}
inline ::ProtoSs::EditPasswordRes* Msg::mutable_edit_password_res() {
  set_has_edit_password_res();
  if (edit_password_res_ == NULL) edit_password_res_ = new ::ProtoSs::EditPasswordRes;
  return edit_password_res_;
}
inline ::ProtoSs::EditPasswordRes* Msg::release_edit_password_res() {
  clear_has_edit_password_res();
  ::ProtoSs::EditPasswordRes* temp = edit_password_res_;
  edit_password_res_ = NULL;
  return temp;
}
inline void Msg::set_allocated_edit_password_res(::ProtoSs::EditPasswordRes* edit_password_res) {
  delete edit_password_res_;
  edit_password_res_ = edit_password_res;
  if (edit_password_res) {
    set_has_edit_password_res();
  } else {
    clear_has_edit_password_res();
  }
}

// optional .ProtoSs.AccountVerifyReq account_verify_req = 17;
inline bool Msg::has_account_verify_req() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Msg::set_has_account_verify_req() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Msg::clear_has_account_verify_req() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Msg::clear_account_verify_req() {
  if (account_verify_req_ != NULL) account_verify_req_->::ProtoSs::AccountVerifyReq::Clear();
  clear_has_account_verify_req();
}
inline const ::ProtoSs::AccountVerifyReq& Msg::account_verify_req() const {
  return account_verify_req_ != NULL ? *account_verify_req_ : *default_instance_->account_verify_req_;
}
inline ::ProtoSs::AccountVerifyReq* Msg::mutable_account_verify_req() {
  set_has_account_verify_req();
  if (account_verify_req_ == NULL) account_verify_req_ = new ::ProtoSs::AccountVerifyReq;
  return account_verify_req_;
}
inline ::ProtoSs::AccountVerifyReq* Msg::release_account_verify_req() {
  clear_has_account_verify_req();
  ::ProtoSs::AccountVerifyReq* temp = account_verify_req_;
  account_verify_req_ = NULL;
  return temp;
}
inline void Msg::set_allocated_account_verify_req(::ProtoSs::AccountVerifyReq* account_verify_req) {
  delete account_verify_req_;
  account_verify_req_ = account_verify_req;
  if (account_verify_req) {
    set_has_account_verify_req();
  } else {
    clear_has_account_verify_req();
  }
}

// optional .ProtoSs.AccountVerifyRes account_verify_res = 18;
inline bool Msg::has_account_verify_res() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Msg::set_has_account_verify_res() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Msg::clear_has_account_verify_res() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Msg::clear_account_verify_res() {
  if (account_verify_res_ != NULL) account_verify_res_->::ProtoSs::AccountVerifyRes::Clear();
  clear_has_account_verify_res();
}
inline const ::ProtoSs::AccountVerifyRes& Msg::account_verify_res() const {
  return account_verify_res_ != NULL ? *account_verify_res_ : *default_instance_->account_verify_res_;
}
inline ::ProtoSs::AccountVerifyRes* Msg::mutable_account_verify_res() {
  set_has_account_verify_res();
  if (account_verify_res_ == NULL) account_verify_res_ = new ::ProtoSs::AccountVerifyRes;
  return account_verify_res_;
}
inline ::ProtoSs::AccountVerifyRes* Msg::release_account_verify_res() {
  clear_has_account_verify_res();
  ::ProtoSs::AccountVerifyRes* temp = account_verify_res_;
  account_verify_res_ = NULL;
  return temp;
}
inline void Msg::set_allocated_account_verify_res(::ProtoSs::AccountVerifyRes* account_verify_res) {
  delete account_verify_res_;
  account_verify_res_ = account_verify_res;
  if (account_verify_res) {
    set_has_account_verify_res();
  } else {
    clear_has_account_verify_res();
  }
}

// optional .ProtoSs.GetPlayerDataReq get_player_data_req = 19;
inline bool Msg::has_get_player_data_req() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Msg::set_has_get_player_data_req() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Msg::clear_has_get_player_data_req() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Msg::clear_get_player_data_req() {
  if (get_player_data_req_ != NULL) get_player_data_req_->::ProtoSs::GetPlayerDataReq::Clear();
  clear_has_get_player_data_req();
}
inline const ::ProtoSs::GetPlayerDataReq& Msg::get_player_data_req() const {
  return get_player_data_req_ != NULL ? *get_player_data_req_ : *default_instance_->get_player_data_req_;
}
inline ::ProtoSs::GetPlayerDataReq* Msg::mutable_get_player_data_req() {
  set_has_get_player_data_req();
  if (get_player_data_req_ == NULL) get_player_data_req_ = new ::ProtoSs::GetPlayerDataReq;
  return get_player_data_req_;
}
inline ::ProtoSs::GetPlayerDataReq* Msg::release_get_player_data_req() {
  clear_has_get_player_data_req();
  ::ProtoSs::GetPlayerDataReq* temp = get_player_data_req_;
  get_player_data_req_ = NULL;
  return temp;
}
inline void Msg::set_allocated_get_player_data_req(::ProtoSs::GetPlayerDataReq* get_player_data_req) {
  delete get_player_data_req_;
  get_player_data_req_ = get_player_data_req;
  if (get_player_data_req) {
    set_has_get_player_data_req();
  } else {
    clear_has_get_player_data_req();
  }
}

// optional .ProtoSs.GetPlayerDataRes get_player_data_res = 20;
inline bool Msg::has_get_player_data_res() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Msg::set_has_get_player_data_res() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Msg::clear_has_get_player_data_res() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Msg::clear_get_player_data_res() {
  if (get_player_data_res_ != NULL) get_player_data_res_->::ProtoSs::GetPlayerDataRes::Clear();
  clear_has_get_player_data_res();
}
inline const ::ProtoSs::GetPlayerDataRes& Msg::get_player_data_res() const {
  return get_player_data_res_ != NULL ? *get_player_data_res_ : *default_instance_->get_player_data_res_;
}
inline ::ProtoSs::GetPlayerDataRes* Msg::mutable_get_player_data_res() {
  set_has_get_player_data_res();
  if (get_player_data_res_ == NULL) get_player_data_res_ = new ::ProtoSs::GetPlayerDataRes;
  return get_player_data_res_;
}
inline ::ProtoSs::GetPlayerDataRes* Msg::release_get_player_data_res() {
  clear_has_get_player_data_res();
  ::ProtoSs::GetPlayerDataRes* temp = get_player_data_res_;
  get_player_data_res_ = NULL;
  return temp;
}
inline void Msg::set_allocated_get_player_data_res(::ProtoSs::GetPlayerDataRes* get_player_data_res) {
  delete get_player_data_res_;
  get_player_data_res_ = get_player_data_res;
  if (get_player_data_res) {
    set_has_get_player_data_res();
  } else {
    clear_has_get_player_data_res();
  }
}

// optional .ProtoSs.SetPlayerDataReq set_player_data_req = 21;
inline bool Msg::has_set_player_data_req() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Msg::set_has_set_player_data_req() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Msg::clear_has_set_player_data_req() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Msg::clear_set_player_data_req() {
  if (set_player_data_req_ != NULL) set_player_data_req_->::ProtoSs::SetPlayerDataReq::Clear();
  clear_has_set_player_data_req();
}
inline const ::ProtoSs::SetPlayerDataReq& Msg::set_player_data_req() const {
  return set_player_data_req_ != NULL ? *set_player_data_req_ : *default_instance_->set_player_data_req_;
}
inline ::ProtoSs::SetPlayerDataReq* Msg::mutable_set_player_data_req() {
  set_has_set_player_data_req();
  if (set_player_data_req_ == NULL) set_player_data_req_ = new ::ProtoSs::SetPlayerDataReq;
  return set_player_data_req_;
}
inline ::ProtoSs::SetPlayerDataReq* Msg::release_set_player_data_req() {
  clear_has_set_player_data_req();
  ::ProtoSs::SetPlayerDataReq* temp = set_player_data_req_;
  set_player_data_req_ = NULL;
  return temp;
}
inline void Msg::set_allocated_set_player_data_req(::ProtoSs::SetPlayerDataReq* set_player_data_req) {
  delete set_player_data_req_;
  set_player_data_req_ = set_player_data_req;
  if (set_player_data_req) {
    set_has_set_player_data_req();
  } else {
    clear_has_set_player_data_req();
  }
}

// optional .ProtoSs.SetPlayerDataRes set_player_data_res = 22;
inline bool Msg::has_set_player_data_res() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Msg::set_has_set_player_data_res() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Msg::clear_has_set_player_data_res() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Msg::clear_set_player_data_res() {
  if (set_player_data_res_ != NULL) set_player_data_res_->::ProtoSs::SetPlayerDataRes::Clear();
  clear_has_set_player_data_res();
}
inline const ::ProtoSs::SetPlayerDataRes& Msg::set_player_data_res() const {
  return set_player_data_res_ != NULL ? *set_player_data_res_ : *default_instance_->set_player_data_res_;
}
inline ::ProtoSs::SetPlayerDataRes* Msg::mutable_set_player_data_res() {
  set_has_set_player_data_res();
  if (set_player_data_res_ == NULL) set_player_data_res_ = new ::ProtoSs::SetPlayerDataRes;
  return set_player_data_res_;
}
inline ::ProtoSs::SetPlayerDataRes* Msg::release_set_player_data_res() {
  clear_has_set_player_data_res();
  ::ProtoSs::SetPlayerDataRes* temp = set_player_data_res_;
  set_player_data_res_ = NULL;
  return temp;
}
inline void Msg::set_allocated_set_player_data_res(::ProtoSs::SetPlayerDataRes* set_player_data_res) {
  delete set_player_data_res_;
  set_player_data_res_ = set_player_data_res;
  if (set_player_data_res) {
    set_has_set_player_data_res();
  } else {
    clear_has_set_player_data_res();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoSs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ss_5fmsg_2eproto__INCLUDED

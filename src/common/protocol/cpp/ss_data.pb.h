// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ss_data.proto

#ifndef PROTOBUF_ss_5fdata_2eproto__INCLUDED
#define PROTOBUF_ss_5fdata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ProtoSs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ss_5fdata_2eproto();
void protobuf_AssignDesc_ss_5fdata_2eproto();
void protobuf_ShutdownFile_ss_5fdata_2eproto();

class AccountRegReq;
class AccountRegRes;
class BindAccountReq;
class BindAccountRes;
class EditPasswordReq;
class EditPasswordRes;
class AccountVerifyReq;
class AccountVerifyRes;
class GetPlayerDataReq;
class GetPlayerDataRes;
class SetPlayerDataReq;
class SetPlayerDataRes;

enum SsDataProtoRet {
  RET_ACCOUNT_REG_OK = 0,
  RET_ACCOUNT_REG_FAILED = -1,
  RET_ACCOUNT_REG_DUP = -2,
  RET_BIND_ACCOUNT_OK = 0,
  RET_BIND_ACCOUNT_FAILED = -1,
  RET_BIND_ACCOUNT_REG_DUP = -2,
  RET_EDIT_PASSWORD_OK = 0,
  RET_EDIT_PASSWORD_FAILED = -1,
  RET_ACCOUNT_VERIFY_OK = 0,
  RET_ACCOUNT_VERIFY_FAILED = -1,
  RET_GET_PLAYER_DATA_OK = 0,
  RET_GET_PLAYER_DATA_FAILED = -1,
  RET_SET_PLAYER_DATA_OK = 0,
  RET_SET_PLAYER_DATA_FAILED = -1
};
bool SsDataProtoRet_IsValid(int value);
const SsDataProtoRet SsDataProtoRet_MIN = RET_ACCOUNT_REG_DUP;
const SsDataProtoRet SsDataProtoRet_MAX = RET_ACCOUNT_REG_OK;
const int SsDataProtoRet_ARRAYSIZE = SsDataProtoRet_MAX + 1;

const ::google::protobuf::EnumDescriptor* SsDataProtoRet_descriptor();
inline const ::std::string& SsDataProtoRet_Name(SsDataProtoRet value) {
  return ::google::protobuf::internal::NameOfEnum(
    SsDataProtoRet_descriptor(), value);
}
inline bool SsDataProtoRet_Parse(
    const ::std::string& name, SsDataProtoRet* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SsDataProtoRet>(
    SsDataProtoRet_descriptor(), name, value);
}
// ===================================================================

class AccountRegReq : public ::google::protobuf::Message {
 public:
  AccountRegReq();
  virtual ~AccountRegReq();

  AccountRegReq(const AccountRegReq& from);

  inline AccountRegReq& operator=(const AccountRegReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegReq& default_instance();

  void Swap(AccountRegReq* other);

  // implements Message ----------------------------------------------

  AccountRegReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountRegReq& from);
  void MergeFrom(const AccountRegReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 password_hash = 2;
  inline bool has_password_hash() const;
  inline void clear_password_hash();
  static const int kPasswordHashFieldNumber = 2;
  inline ::google::protobuf::uint64 password_hash() const;
  inline void set_password_hash(::google::protobuf::uint64 value);

  // optional bytes account = 3;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 3;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional bytes player_data = 4;
  inline bool has_player_data() const;
  inline void clear_player_data();
  static const int kPlayerDataFieldNumber = 4;
  inline const ::std::string& player_data() const;
  inline void set_player_data(const ::std::string& value);
  inline void set_player_data(const char* value);
  inline void set_player_data(const void* value, size_t size);
  inline ::std::string* mutable_player_data();
  inline ::std::string* release_player_data();
  inline void set_allocated_player_data(::std::string* player_data);

  // @@protoc_insertion_point(class_scope:ProtoSs.AccountRegReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_password_hash();
  inline void clear_has_password_hash();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_player_data();
  inline void clear_has_player_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 password_hash_;
  ::std::string* account_;
  ::std::string* player_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static AccountRegReq* default_instance_;
};
// -------------------------------------------------------------------

class AccountRegRes : public ::google::protobuf::Message {
 public:
  AccountRegRes();
  virtual ~AccountRegRes();

  AccountRegRes(const AccountRegRes& from);

  inline AccountRegRes& operator=(const AccountRegRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountRegRes& default_instance();

  void Swap(AccountRegRes* other);

  // implements Message ----------------------------------------------

  AccountRegRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountRegRes& from);
  void MergeFrom(const AccountRegRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool numb = 1;
  inline bool has_numb() const;
  inline void clear_numb();
  static const int kNumbFieldNumber = 1;
  inline bool numb() const;
  inline void set_numb(bool value);

  // @@protoc_insertion_point(class_scope:ProtoSs.AccountRegRes)
 private:
  inline void set_has_numb();
  inline void clear_has_numb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool numb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static AccountRegRes* default_instance_;
};
// -------------------------------------------------------------------

class BindAccountReq : public ::google::protobuf::Message {
 public:
  BindAccountReq();
  virtual ~BindAccountReq();

  BindAccountReq(const BindAccountReq& from);

  inline BindAccountReq& operator=(const BindAccountReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindAccountReq& default_instance();

  void Swap(BindAccountReq* other);

  // implements Message ----------------------------------------------

  BindAccountReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindAccountReq& from);
  void MergeFrom(const BindAccountReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional bytes account = 2;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 2;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const void* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional bytes password_hash = 3;
  inline bool has_password_hash() const;
  inline void clear_password_hash();
  static const int kPasswordHashFieldNumber = 3;
  inline const ::std::string& password_hash() const;
  inline void set_password_hash(const ::std::string& value);
  inline void set_password_hash(const char* value);
  inline void set_password_hash(const void* value, size_t size);
  inline ::std::string* mutable_password_hash();
  inline ::std::string* release_password_hash();
  inline void set_allocated_password_hash(::std::string* password_hash);

  // @@protoc_insertion_point(class_scope:ProtoSs.BindAccountReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_password_hash();
  inline void clear_has_password_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::std::string* account_;
  ::std::string* password_hash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static BindAccountReq* default_instance_;
};
// -------------------------------------------------------------------

class BindAccountRes : public ::google::protobuf::Message {
 public:
  BindAccountRes();
  virtual ~BindAccountRes();

  BindAccountRes(const BindAccountRes& from);

  inline BindAccountRes& operator=(const BindAccountRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindAccountRes& default_instance();

  void Swap(BindAccountRes* other);

  // implements Message ----------------------------------------------

  BindAccountRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindAccountRes& from);
  void MergeFrom(const BindAccountRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool numb = 1;
  inline bool has_numb() const;
  inline void clear_numb();
  static const int kNumbFieldNumber = 1;
  inline bool numb() const;
  inline void set_numb(bool value);

  // @@protoc_insertion_point(class_scope:ProtoSs.BindAccountRes)
 private:
  inline void set_has_numb();
  inline void clear_has_numb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool numb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static BindAccountRes* default_instance_;
};
// -------------------------------------------------------------------

class EditPasswordReq : public ::google::protobuf::Message {
 public:
  EditPasswordReq();
  virtual ~EditPasswordReq();

  EditPasswordReq(const EditPasswordReq& from);

  inline EditPasswordReq& operator=(const EditPasswordReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditPasswordReq& default_instance();

  void Swap(EditPasswordReq* other);

  // implements Message ----------------------------------------------

  EditPasswordReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditPasswordReq& from);
  void MergeFrom(const EditPasswordReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 old_password_hash = 2;
  inline bool has_old_password_hash() const;
  inline void clear_old_password_hash();
  static const int kOldPasswordHashFieldNumber = 2;
  inline ::google::protobuf::uint64 old_password_hash() const;
  inline void set_old_password_hash(::google::protobuf::uint64 value);

  // optional uint64 new_password_hash = 3;
  inline bool has_new_password_hash() const;
  inline void clear_new_password_hash();
  static const int kNewPasswordHashFieldNumber = 3;
  inline ::google::protobuf::uint64 new_password_hash() const;
  inline void set_new_password_hash(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoSs.EditPasswordReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_old_password_hash();
  inline void clear_has_old_password_hash();
  inline void set_has_new_password_hash();
  inline void clear_has_new_password_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 old_password_hash_;
  ::google::protobuf::uint64 new_password_hash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static EditPasswordReq* default_instance_;
};
// -------------------------------------------------------------------

class EditPasswordRes : public ::google::protobuf::Message {
 public:
  EditPasswordRes();
  virtual ~EditPasswordRes();

  EditPasswordRes(const EditPasswordRes& from);

  inline EditPasswordRes& operator=(const EditPasswordRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EditPasswordRes& default_instance();

  void Swap(EditPasswordRes* other);

  // implements Message ----------------------------------------------

  EditPasswordRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EditPasswordRes& from);
  void MergeFrom(const EditPasswordRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool numb = 1;
  inline bool has_numb() const;
  inline void clear_numb();
  static const int kNumbFieldNumber = 1;
  inline bool numb() const;
  inline void set_numb(bool value);

  // @@protoc_insertion_point(class_scope:ProtoSs.EditPasswordRes)
 private:
  inline void set_has_numb();
  inline void clear_has_numb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool numb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static EditPasswordRes* default_instance_;
};
// -------------------------------------------------------------------

class AccountVerifyReq : public ::google::protobuf::Message {
 public:
  AccountVerifyReq();
  virtual ~AccountVerifyReq();

  AccountVerifyReq(const AccountVerifyReq& from);

  inline AccountVerifyReq& operator=(const AccountVerifyReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountVerifyReq& default_instance();

  void Swap(AccountVerifyReq* other);

  // implements Message ----------------------------------------------

  AccountVerifyReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountVerifyReq& from);
  void MergeFrom(const AccountVerifyReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 password_hash = 2;
  inline bool has_password_hash() const;
  inline void clear_password_hash();
  static const int kPasswordHashFieldNumber = 2;
  inline ::google::protobuf::uint64 password_hash() const;
  inline void set_password_hash(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoSs.AccountVerifyReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_password_hash();
  inline void clear_has_password_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 password_hash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static AccountVerifyReq* default_instance_;
};
// -------------------------------------------------------------------

class AccountVerifyRes : public ::google::protobuf::Message {
 public:
  AccountVerifyRes();
  virtual ~AccountVerifyRes();

  AccountVerifyRes(const AccountVerifyRes& from);

  inline AccountVerifyRes& operator=(const AccountVerifyRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountVerifyRes& default_instance();

  void Swap(AccountVerifyRes* other);

  // implements Message ----------------------------------------------

  AccountVerifyRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountVerifyRes& from);
  void MergeFrom(const AccountVerifyRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool numb = 1;
  inline bool has_numb() const;
  inline void clear_numb();
  static const int kNumbFieldNumber = 1;
  inline bool numb() const;
  inline void set_numb(bool value);

  // @@protoc_insertion_point(class_scope:ProtoSs.AccountVerifyRes)
 private:
  inline void set_has_numb();
  inline void clear_has_numb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool numb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static AccountVerifyRes* default_instance_;
};
// -------------------------------------------------------------------

class GetPlayerDataReq : public ::google::protobuf::Message {
 public:
  GetPlayerDataReq();
  virtual ~GetPlayerDataReq();

  GetPlayerDataReq(const GetPlayerDataReq& from);

  inline GetPlayerDataReq& operator=(const GetPlayerDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerDataReq& default_instance();

  void Swap(GetPlayerDataReq* other);

  // implements Message ----------------------------------------------

  GetPlayerDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPlayerDataReq& from);
  void MergeFrom(const GetPlayerDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional uint64 password_hash = 2;
  inline bool has_password_hash() const;
  inline void clear_password_hash();
  static const int kPasswordHashFieldNumber = 2;
  inline ::google::protobuf::uint64 password_hash() const;
  inline void set_password_hash(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:ProtoSs.GetPlayerDataReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_password_hash();
  inline void clear_has_password_hash();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::google::protobuf::uint64 password_hash_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static GetPlayerDataReq* default_instance_;
};
// -------------------------------------------------------------------

class GetPlayerDataRes : public ::google::protobuf::Message {
 public:
  GetPlayerDataRes();
  virtual ~GetPlayerDataRes();

  GetPlayerDataRes(const GetPlayerDataRes& from);

  inline GetPlayerDataRes& operator=(const GetPlayerDataRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPlayerDataRes& default_instance();

  void Swap(GetPlayerDataRes* other);

  // implements Message ----------------------------------------------

  GetPlayerDataRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPlayerDataRes& from);
  void MergeFrom(const GetPlayerDataRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes player_data = 1;
  inline bool has_player_data() const;
  inline void clear_player_data();
  static const int kPlayerDataFieldNumber = 1;
  inline const ::std::string& player_data() const;
  inline void set_player_data(const ::std::string& value);
  inline void set_player_data(const char* value);
  inline void set_player_data(const void* value, size_t size);
  inline ::std::string* mutable_player_data();
  inline ::std::string* release_player_data();
  inline void set_allocated_player_data(::std::string* player_data);

  // @@protoc_insertion_point(class_scope:ProtoSs.GetPlayerDataRes)
 private:
  inline void set_has_player_data();
  inline void clear_has_player_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* player_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static GetPlayerDataRes* default_instance_;
};
// -------------------------------------------------------------------

class SetPlayerDataReq : public ::google::protobuf::Message {
 public:
  SetPlayerDataReq();
  virtual ~SetPlayerDataReq();

  SetPlayerDataReq(const SetPlayerDataReq& from);

  inline SetPlayerDataReq& operator=(const SetPlayerDataReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerDataReq& default_instance();

  void Swap(SetPlayerDataReq* other);

  // implements Message ----------------------------------------------

  SetPlayerDataReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPlayerDataReq& from);
  void MergeFrom(const SetPlayerDataReq& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 uid = 1;
  inline bool has_uid() const;
  inline void clear_uid();
  static const int kUidFieldNumber = 1;
  inline ::google::protobuf::uint64 uid() const;
  inline void set_uid(::google::protobuf::uint64 value);

  // optional bytes player_data = 2;
  inline bool has_player_data() const;
  inline void clear_player_data();
  static const int kPlayerDataFieldNumber = 2;
  inline const ::std::string& player_data() const;
  inline void set_player_data(const ::std::string& value);
  inline void set_player_data(const char* value);
  inline void set_player_data(const void* value, size_t size);
  inline ::std::string* mutable_player_data();
  inline ::std::string* release_player_data();
  inline void set_allocated_player_data(::std::string* player_data);

  // @@protoc_insertion_point(class_scope:ProtoSs.SetPlayerDataReq)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();
  inline void set_has_player_data();
  inline void clear_has_player_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint64 uid_;
  ::std::string* player_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static SetPlayerDataReq* default_instance_;
};
// -------------------------------------------------------------------

class SetPlayerDataRes : public ::google::protobuf::Message {
 public:
  SetPlayerDataRes();
  virtual ~SetPlayerDataRes();

  SetPlayerDataRes(const SetPlayerDataRes& from);

  inline SetPlayerDataRes& operator=(const SetPlayerDataRes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetPlayerDataRes& default_instance();

  void Swap(SetPlayerDataRes* other);

  // implements Message ----------------------------------------------

  SetPlayerDataRes* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SetPlayerDataRes& from);
  void MergeFrom(const SetPlayerDataRes& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool numb = 1;
  inline bool has_numb() const;
  inline void clear_numb();
  static const int kNumbFieldNumber = 1;
  inline bool numb() const;
  inline void set_numb(bool value);

  // @@protoc_insertion_point(class_scope:ProtoSs.SetPlayerDataRes)
 private:
  inline void set_has_numb();
  inline void clear_has_numb();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  bool numb_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_ss_5fdata_2eproto();
  friend void protobuf_AssignDesc_ss_5fdata_2eproto();
  friend void protobuf_ShutdownFile_ss_5fdata_2eproto();

  void InitAsDefaultInstance();
  static SetPlayerDataRes* default_instance_;
};
// ===================================================================


// ===================================================================

// AccountRegReq

// optional uint64 uid = 1;
inline bool AccountRegReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountRegReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountRegReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountRegReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 AccountRegReq::uid() const {
  return uid_;
}
inline void AccountRegReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 password_hash = 2;
inline bool AccountRegReq::has_password_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountRegReq::set_has_password_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountRegReq::clear_has_password_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountRegReq::clear_password_hash() {
  password_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_password_hash();
}
inline ::google::protobuf::uint64 AccountRegReq::password_hash() const {
  return password_hash_;
}
inline void AccountRegReq::set_password_hash(::google::protobuf::uint64 value) {
  set_has_password_hash();
  password_hash_ = value;
}

// optional bytes account = 3;
inline bool AccountRegReq::has_account() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AccountRegReq::set_has_account() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AccountRegReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AccountRegReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& AccountRegReq::account() const {
  return *account_;
}
inline void AccountRegReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void AccountRegReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void AccountRegReq::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccountRegReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* AccountRegReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccountRegReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes player_data = 4;
inline bool AccountRegReq::has_player_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AccountRegReq::set_has_player_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AccountRegReq::clear_has_player_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AccountRegReq::clear_player_data() {
  if (player_data_ != &::google::protobuf::internal::kEmptyString) {
    player_data_->clear();
  }
  clear_has_player_data();
}
inline const ::std::string& AccountRegReq::player_data() const {
  return *player_data_;
}
inline void AccountRegReq::set_player_data(const ::std::string& value) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(value);
}
inline void AccountRegReq::set_player_data(const char* value) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(value);
}
inline void AccountRegReq::set_player_data(const void* value, size_t size) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AccountRegReq::mutable_player_data() {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  return player_data_;
}
inline ::std::string* AccountRegReq::release_player_data() {
  clear_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_data_;
    player_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AccountRegReq::set_allocated_player_data(::std::string* player_data) {
  if (player_data_ != &::google::protobuf::internal::kEmptyString) {
    delete player_data_;
  }
  if (player_data) {
    set_has_player_data();
    player_data_ = player_data;
  } else {
    clear_has_player_data();
    player_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AccountRegRes

// optional bool numb = 1;
inline bool AccountRegRes::has_numb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountRegRes::set_has_numb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountRegRes::clear_has_numb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountRegRes::clear_numb() {
  numb_ = false;
  clear_has_numb();
}
inline bool AccountRegRes::numb() const {
  return numb_;
}
inline void AccountRegRes::set_numb(bool value) {
  set_has_numb();
  numb_ = value;
}

// -------------------------------------------------------------------

// BindAccountReq

// optional uint64 uid = 1;
inline bool BindAccountReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BindAccountReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BindAccountReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BindAccountReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 BindAccountReq::uid() const {
  return uid_;
}
inline void BindAccountReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes account = 2;
inline bool BindAccountReq::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BindAccountReq::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BindAccountReq::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BindAccountReq::clear_account() {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& BindAccountReq::account() const {
  return *account_;
}
inline void BindAccountReq::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void BindAccountReq::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(value);
}
inline void BindAccountReq::set_account(const void* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BindAccountReq::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    account_ = new ::std::string;
  }
  return account_;
}
inline ::std::string* BindAccountReq::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BindAccountReq::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::kEmptyString) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional bytes password_hash = 3;
inline bool BindAccountReq::has_password_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BindAccountReq::set_has_password_hash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BindAccountReq::clear_has_password_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BindAccountReq::clear_password_hash() {
  if (password_hash_ != &::google::protobuf::internal::kEmptyString) {
    password_hash_->clear();
  }
  clear_has_password_hash();
}
inline const ::std::string& BindAccountReq::password_hash() const {
  return *password_hash_;
}
inline void BindAccountReq::set_password_hash(const ::std::string& value) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::kEmptyString) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(value);
}
inline void BindAccountReq::set_password_hash(const char* value) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::kEmptyString) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(value);
}
inline void BindAccountReq::set_password_hash(const void* value, size_t size) {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::kEmptyString) {
    password_hash_ = new ::std::string;
  }
  password_hash_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BindAccountReq::mutable_password_hash() {
  set_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::kEmptyString) {
    password_hash_ = new ::std::string;
  }
  return password_hash_;
}
inline ::std::string* BindAccountReq::release_password_hash() {
  clear_has_password_hash();
  if (password_hash_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_hash_;
    password_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void BindAccountReq::set_allocated_password_hash(::std::string* password_hash) {
  if (password_hash_ != &::google::protobuf::internal::kEmptyString) {
    delete password_hash_;
  }
  if (password_hash) {
    set_has_password_hash();
    password_hash_ = password_hash;
  } else {
    clear_has_password_hash();
    password_hash_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// BindAccountRes

// optional bool numb = 1;
inline bool BindAccountRes::has_numb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BindAccountRes::set_has_numb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BindAccountRes::clear_has_numb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BindAccountRes::clear_numb() {
  numb_ = false;
  clear_has_numb();
}
inline bool BindAccountRes::numb() const {
  return numb_;
}
inline void BindAccountRes::set_numb(bool value) {
  set_has_numb();
  numb_ = value;
}

// -------------------------------------------------------------------

// EditPasswordReq

// optional uint64 uid = 1;
inline bool EditPasswordReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditPasswordReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditPasswordReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditPasswordReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 EditPasswordReq::uid() const {
  return uid_;
}
inline void EditPasswordReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 old_password_hash = 2;
inline bool EditPasswordReq::has_old_password_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EditPasswordReq::set_has_old_password_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EditPasswordReq::clear_has_old_password_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EditPasswordReq::clear_old_password_hash() {
  old_password_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_old_password_hash();
}
inline ::google::protobuf::uint64 EditPasswordReq::old_password_hash() const {
  return old_password_hash_;
}
inline void EditPasswordReq::set_old_password_hash(::google::protobuf::uint64 value) {
  set_has_old_password_hash();
  old_password_hash_ = value;
}

// optional uint64 new_password_hash = 3;
inline bool EditPasswordReq::has_new_password_hash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EditPasswordReq::set_has_new_password_hash() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EditPasswordReq::clear_has_new_password_hash() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EditPasswordReq::clear_new_password_hash() {
  new_password_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_new_password_hash();
}
inline ::google::protobuf::uint64 EditPasswordReq::new_password_hash() const {
  return new_password_hash_;
}
inline void EditPasswordReq::set_new_password_hash(::google::protobuf::uint64 value) {
  set_has_new_password_hash();
  new_password_hash_ = value;
}

// -------------------------------------------------------------------

// EditPasswordRes

// optional bool numb = 1;
inline bool EditPasswordRes::has_numb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EditPasswordRes::set_has_numb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EditPasswordRes::clear_has_numb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EditPasswordRes::clear_numb() {
  numb_ = false;
  clear_has_numb();
}
inline bool EditPasswordRes::numb() const {
  return numb_;
}
inline void EditPasswordRes::set_numb(bool value) {
  set_has_numb();
  numb_ = value;
}

// -------------------------------------------------------------------

// AccountVerifyReq

// optional uint64 uid = 1;
inline bool AccountVerifyReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountVerifyReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountVerifyReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountVerifyReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 AccountVerifyReq::uid() const {
  return uid_;
}
inline void AccountVerifyReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 password_hash = 2;
inline bool AccountVerifyReq::has_password_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AccountVerifyReq::set_has_password_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AccountVerifyReq::clear_has_password_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AccountVerifyReq::clear_password_hash() {
  password_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_password_hash();
}
inline ::google::protobuf::uint64 AccountVerifyReq::password_hash() const {
  return password_hash_;
}
inline void AccountVerifyReq::set_password_hash(::google::protobuf::uint64 value) {
  set_has_password_hash();
  password_hash_ = value;
}

// -------------------------------------------------------------------

// AccountVerifyRes

// optional bool numb = 1;
inline bool AccountVerifyRes::has_numb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountVerifyRes::set_has_numb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountVerifyRes::clear_has_numb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountVerifyRes::clear_numb() {
  numb_ = false;
  clear_has_numb();
}
inline bool AccountVerifyRes::numb() const {
  return numb_;
}
inline void AccountVerifyRes::set_numb(bool value) {
  set_has_numb();
  numb_ = value;
}

// -------------------------------------------------------------------

// GetPlayerDataReq

// optional uint64 uid = 1;
inline bool GetPlayerDataReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPlayerDataReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPlayerDataReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPlayerDataReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 GetPlayerDataReq::uid() const {
  return uid_;
}
inline void GetPlayerDataReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional uint64 password_hash = 2;
inline bool GetPlayerDataReq::has_password_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetPlayerDataReq::set_has_password_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetPlayerDataReq::clear_has_password_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetPlayerDataReq::clear_password_hash() {
  password_hash_ = GOOGLE_ULONGLONG(0);
  clear_has_password_hash();
}
inline ::google::protobuf::uint64 GetPlayerDataReq::password_hash() const {
  return password_hash_;
}
inline void GetPlayerDataReq::set_password_hash(::google::protobuf::uint64 value) {
  set_has_password_hash();
  password_hash_ = value;
}

// -------------------------------------------------------------------

// GetPlayerDataRes

// optional bytes player_data = 1;
inline bool GetPlayerDataRes::has_player_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetPlayerDataRes::set_has_player_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetPlayerDataRes::clear_has_player_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetPlayerDataRes::clear_player_data() {
  if (player_data_ != &::google::protobuf::internal::kEmptyString) {
    player_data_->clear();
  }
  clear_has_player_data();
}
inline const ::std::string& GetPlayerDataRes::player_data() const {
  return *player_data_;
}
inline void GetPlayerDataRes::set_player_data(const ::std::string& value) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(value);
}
inline void GetPlayerDataRes::set_player_data(const char* value) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(value);
}
inline void GetPlayerDataRes::set_player_data(const void* value, size_t size) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetPlayerDataRes::mutable_player_data() {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  return player_data_;
}
inline ::std::string* GetPlayerDataRes::release_player_data() {
  clear_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_data_;
    player_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void GetPlayerDataRes::set_allocated_player_data(::std::string* player_data) {
  if (player_data_ != &::google::protobuf::internal::kEmptyString) {
    delete player_data_;
  }
  if (player_data) {
    set_has_player_data();
    player_data_ = player_data;
  } else {
    clear_has_player_data();
    player_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SetPlayerDataReq

// optional uint64 uid = 1;
inline bool SetPlayerDataReq::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetPlayerDataReq::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetPlayerDataReq::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetPlayerDataReq::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::uint64 SetPlayerDataReq::uid() const {
  return uid_;
}
inline void SetPlayerDataReq::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
}

// optional bytes player_data = 2;
inline bool SetPlayerDataReq::has_player_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SetPlayerDataReq::set_has_player_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SetPlayerDataReq::clear_has_player_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SetPlayerDataReq::clear_player_data() {
  if (player_data_ != &::google::protobuf::internal::kEmptyString) {
    player_data_->clear();
  }
  clear_has_player_data();
}
inline const ::std::string& SetPlayerDataReq::player_data() const {
  return *player_data_;
}
inline void SetPlayerDataReq::set_player_data(const ::std::string& value) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(value);
}
inline void SetPlayerDataReq::set_player_data(const char* value) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(value);
}
inline void SetPlayerDataReq::set_player_data(const void* value, size_t size) {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  player_data_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* SetPlayerDataReq::mutable_player_data() {
  set_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    player_data_ = new ::std::string;
  }
  return player_data_;
}
inline ::std::string* SetPlayerDataReq::release_player_data() {
  clear_has_player_data();
  if (player_data_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = player_data_;
    player_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void SetPlayerDataReq::set_allocated_player_data(::std::string* player_data) {
  if (player_data_ != &::google::protobuf::internal::kEmptyString) {
    delete player_data_;
  }
  if (player_data) {
    set_has_player_data();
    player_data_ = player_data;
  } else {
    clear_has_player_data();
    player_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// SetPlayerDataRes

// optional bool numb = 1;
inline bool SetPlayerDataRes::has_numb() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SetPlayerDataRes::set_has_numb() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SetPlayerDataRes::clear_has_numb() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SetPlayerDataRes::clear_numb() {
  numb_ = false;
  clear_has_numb();
}
inline bool SetPlayerDataRes::numb() const {
  return numb_;
}
inline void SetPlayerDataRes::set_numb(bool value) {
  set_has_numb();
  numb_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoSs

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoSs::SsDataProtoRet>() {
  return ::ProtoSs::SsDataProtoRet_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ss_5fdata_2eproto__INCLUDED
